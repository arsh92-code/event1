<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Location Finder</title>
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css" />
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Arial', sans-serif;
            background-color: #f0f2f5;
        }

        .container {
            max-width: 1200px;
            margin: 20px auto;
            padding: 20px;
        }

        .location-card {
            background: white;
            border-radius: 10px;
            box-shadow: 0 2px 15px rgba(0,0,0,0.1);
            padding: 20px;
            margin-bottom: 20px;
        }

        #map {
            height: 400px;
            border-radius: 8px;
            margin-top: 20px;
        }

        .button {
            background: #007bff;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 5px;
            cursor: pointer;
            transition: background 0.3s;
        }

        .button:hover {
            background: #0056b3;
        }

        .location-info {
            margin: 20px 0;
            padding: 15px;
            background: #f8f9fa;
            border-radius: 5px;
        }

        .coordinates {
            font-family: monospace;
            color: #666;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="location-card">
            <h1>Current Location Finder</h1>
            <button class="button" id="getLocation">Detect My Location</button>
            <div class="location-info">
                <p><strong>Coordinates:</strong> <span id="coordinates" class="coordinates">-</span></p>
                <p><strong>Address:</strong> <span id="address">-</span></p>
                <p><strong>Accuracy:</strong> <span id="accuracy">-</span> meters</p>
            </div>
            <div id="map"></div>
        </div>
    </div>

    <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>
    <script>
        let map = null;
        let marker = null;

        // Initialize map
        function initMap(lat, lng) {
            if (!map) {
                map = L.map('map').setView([lat, lng], 13);
                L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                    attribution: 'Â© OpenStreetMap contributors'
                }).addTo(map);
            }
            if (marker) {
                map.removeLayer(marker);
            }
            marker = L.marker([lat, lng]).addTo(map);
            map.setView([lat, lng], 13);
        }

        // Get location button handler
        document.getElementById('getLocation').addEventListener('click', () => {
            if (!navigator.geolocation) {
                alert("Geolocation is not supported by your browser");
                return;
            }

            navigator.geolocation.getCurrentPosition(
                async (position) => {
                    const { latitude, longitude, accuracy } = position.coords;
                    
                    // Update coordinates
                    document.getElementById('coordinates').textContent = 
                        `${latitude.toFixed(6)}, ${longitude.toFixed(6)}`;
                    document.getElementById('accuracy').textContent = accuracy.toFixed(0);

                    // Initialize or update map
                    initMap(latitude, longitude);

                    // Get address using OpenStreetMap Nominatim
                    try {
                        const response = await fetch(
                            `https://nominatim.openstreetmap.org/reverse?format=json&lat=${latitude}&lon=${longitude}`
                        );
                        const data = await response.json();
                        document.getElementById('address').textContent = 
                            data.display_name || 'Address not found';
                    } catch (error) {
                        document.getElementById('address').textContent = 
                            'Could not fetch address';
                    }
                },
                (error) => {
                    handleGeolocationError(error);
                },
                {
                    enableHighAccuracy: true,
                    timeout: 5000,
                    maximumAge: 0
                }
            );
        });

        function handleGeolocationError(error) {
            let message = '';
            switch(error.code) {
                case error.PERMISSION_DENIED:
                    message = "Location access was denied. Please enable permissions.";
                    break;
                case error.POSITION_UNAVAILABLE:
                    message = "Location information is unavailable.";
                    break;
                case error.TIMEOUT:
                    message = "The request to get location timed out.";
                    break;
                default:
                    message = "An unknown error occurred.";
            }
            alert(message);
        }
    </script>
</body>
</html>